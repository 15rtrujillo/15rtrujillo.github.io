My History with Programming
2024/12/04
My first exposure to programming occurred around age 10 when my father introduced me to the Phrogram programming language. I'm not sure if it exists anymore, but it was a programming language and enviornment that was designed to help beginners (especially children) get into programming, specifically games programming. I will be honest and say that I didn't really accomplish much with this program.

I could go off on a side tangent here about "Club Spider," but this probably isn't the best place. Perhaps I'll write about it in another post one day.

I didn't really try programming again until I was 14. I don't remember what got me interested in the subject again, but I remember asking my dad how I could learn to program. He was currently working with C# in his job, and so he gave me a C# book that he had used himself years ago. The book was <em>Sams Teach Yourself C# in 24 Hours</em> by James Foxall. He highlighted some chapters I should read (which was most of them), helped me install Visual Studio on my laptop, and left me to work.

To say I fell in love with programming would be an understatement. I went through all the chapters my dad had suggested in no time at all, following along with every code example. Sometimes I would even take the book with me to read when I would leave the house. It wasn't very long before I outgrew the examples and lessons in the book and wanted to try my own thing.

To make a long story short, my first personal project was a game. Yes, I tried to write a game with C# using WinForms. Of course it was awful, and I never ended up finishing it, but I did learn a lot. I could actually write a whole other blog post about that game and the ones that I tried to make after that, but again, that's probably for another day.

There were other personal projects after that, but what probably helped my programming the most was when I got into Roblox. Roblox is an online platform where users can create their own games and share them with others. Honestly, while the platform gets a bad rep, I still think it's one of the easiest ways for people to get into game programming. A lot of the tedious parts (3D art in particular) are handled by the engine, since the idea with Roblox is that it's "digital Lego." Since you don't have to waste your time 3D modeling, you can spend more time learning how to program.

Roblox uses Lua as its scripting language. It was a pretty rough transition from C# to Lua, and it took a lot of tinkering before I felt comfortable with the language. However, after lots of practice and studying other people's scripts, I was able to pick up a decent amount of knowledge. I still remember writing my first script all on my own (all it did was change the color of a brick when you touched it), and the feeling of accomplishment that came along with it. I never made any insanely successful games, but I did make a couple that got a decent amount of players over the years.

Once I got comfrotable enough with Lua, I decided that I wanted to share what I had learned with others. I started making Roblox Lua scripting tutorials on YouTube. I'm not going to link my channel at this time, because I don't really feel comfortable linking my YouTube with my real name, but you could probably find it if you looked hard enough. I spent most of my high school and college years making scripting tutorials for YouTube; some weeks I would even manage to upload daily videos. Making and sharing these videos is one of the things that helped me decide I wanted to become a teacher.

Speaking of college, that's where my programming journey took me next. WHile my original major was Psychology, I switched to programming after my freshman year. I won't go into why I decided to switch in this post, but I loved it.

I won't go into everything I learned in college, but I will mention our final project. The final project for my degree came in two phases. The first phase was to write a virtual machine and an assembler to run on the virtual machine. Ever since my Computer Architecture class, I had been facinated with assembly, so this project was very exciting for me. We would write assembly programs to test our assembler and virtual machines, and sometimes it was difficult to find where the bugs were since there were those three layers of failure points.

The second phase was to write a complier. Essentially, we were given the grammer for a C-style language that we had to lex, parse, and generate assembly instructions to run on our virutal machines. Again, this project was a ton of fun for me. While I will admit that I found the project to be quite difficult, I did manage to finish it and when I did, that was one of the best feelings I'd ever felt.

These days, I teach computer classes at a high school, including programming, computer science, and game development. I still work on personal projects as often as I can, and I'm always trying to learn new things. Programming is just one of those things that has always been a part of my life, and I know that it will continue to be there for the rest of it, too.

That's pretty much my personal history with programming. I might've left out some things here and there; I would probably get tired of writing if I went into every detail and project. You can check out the <a href="portfolio.html">portfolio</a> if you want to see some of the projects I've worked on. As I mentioned, this won't include anything from my YouTube channel or my Roblox account (at least not right now), but it will include a lot of other things that I've worked on over the years.